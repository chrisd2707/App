<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-08-23T03:39:38 IST" name="Default suite" finished-at="2023-08-23T03:39:58 IST" duration-ms="19760">
    <groups>
    </groups>
    <test started-at="2023-08-23T03:39:38 IST" name="Default test" finished-at="2023-08-23T03:39:58 IST" duration-ms="19760">
      <class name="com.leo1.App.leo1cardrework">
        <test-method signature="testingblock()[pri:0, instance:com.leo1.App.leo1cardrework@60641ec8]" started-at="2023-08-23T03:39:38 IST" name="testingblock" finished-at="2023-08-23T03:39:58 IST" duration-ms="19716" status="FAIL">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[An unknown server-side error occurred while processing the command. Original error: Value does not match a required type.. Try changing the 'enforceXPath1' driver setting to 'true' in order to workaround the problem.
Build info: version: '4.8.3', revision: 'e5e76298c3'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [fded0b34-9d0b-44d7-9a3b-9aa58ec34026, findElement {using=xpath, value=//*[contains(text(),'Sign Up')]}]
Capabilities {appium:app: C:\Users\User\Desktop\Progr..., appium:appId: com.leo1_card, appium:appPackage: com.leo1_card, appium:automationName: UIAutomator2, appium:databaseEnabled: false, appium:desired: {app: C:\Users\User\Desktop\Progr..., appId: com.leo1_card, automationName: UIAutomator2, deviceName: OnePlus 6T, platformName: android, resetKeyboard: false, unicodeKeyboard: false}, appium:deviceApiLevel: 30, appium:deviceManufacturer: OnePlus, appium:deviceModel: ONEPLUS A6010, appium:deviceName: 192.168.1.6:42663, appium:deviceScreenDensity: 450, appium:deviceScreenSize: 1080x2340, appium:deviceUDID: 192.168.1.6:42663, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:networkConnectionEnabled: true, appium:pixelRatio: 2.8125, appium:platformVersion: 11, appium:resetKeyboard: false, appium:statBarHeight: 80, appium:takesScreenshot: true, appium:unicodeKeyboard: false, appium:viewportRect: {height: 2045, left: 0, top: 80, width: 1080}, appium:warnings: {}, appium:webStorageEnabled: false, platformName: ANDROID}
Session ID: fded0b34-9d0b-44d7-9a3b-9aa58ec34026]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Value does not match a required type.. Try changing the 'enforceXPath1' driver setting to 'true' in order to workaround the problem.
Build info: version: '4.8.3', revision: 'e5e76298c3'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [fded0b34-9d0b-44d7-9a3b-9aa58ec34026, findElement {using=xpath, value=//*[contains(text(),'Sign Up')]}]
Capabilities {appium:app: C:\Users\User\Desktop\Progr..., appium:appId: com.leo1_card, appium:appPackage: com.leo1_card, appium:automationName: UIAutomator2, appium:databaseEnabled: false, appium:desired: {app: C:\Users\User\Desktop\Progr..., appId: com.leo1_card, automationName: UIAutomator2, deviceName: OnePlus 6T, platformName: android, resetKeyboard: false, unicodeKeyboard: false}, appium:deviceApiLevel: 30, appium:deviceManufacturer: OnePlus, appium:deviceModel: ONEPLUS A6010, appium:deviceName: 192.168.1.6:42663, appium:deviceScreenDensity: 450, appium:deviceScreenSize: 1080x2340, appium:deviceUDID: 192.168.1.6:42663, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:networkConnectionEnabled: true, appium:pixelRatio: 2.8125, appium:platformVersion: 11, appium:resetKeyboard: false, appium:statBarHeight: 80, appium:takesScreenshot: true, appium:unicodeKeyboard: false, appium:viewportRect: {height: 2045, left: 0, top: 80, width: 1080}, appium:warnings: {}, appium:webStorageEnabled: false, platformName: ANDROID}
Session ID: fded0b34-9d0b-44d7-9a3b-9aa58ec34026
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:193)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:262)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:352)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at com.leo1.App.leo1cardrework.testingblock(leo1cardrework.java:87)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testingblock -->
      </class> <!-- com.leo1.App.leo1cardrework -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
